{"version":3,"sources":["Components/Card/Card.component.jsx","Components/Card-List/Card-List.component.jsx","Components/Search-Box/Seach-Box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","Monster","id","name","email","CardList","Monsters","map","SearchBox","PlaceHolder","HandleChange","type","placeholder","onChange","App","onHandleChange","e","setState","SearchField","target","value","state","fetch","then","response","json","users","this","FiltedSearch","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACrB,6BAAKL,EAAMI,QAAQE,OACnB,6BAAKN,EAAMI,QAAQG,YCJlBC,G,MAAW,SAACR,GAGrB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNlBM,G,YAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OACI,uBACIZ,UAAU,aACVa,KAAK,SACLC,YAAaH,EACbI,SAAUH,MC6FPI,E,kDAhGb,aAAe,IAAD,8BACZ,gBAkBFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAjBtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEX,SAAUoB,S,oBAW7C,WAGE,MAAkCC,KAAKN,MAA/Bf,EAAR,EAAQA,SAAUY,EAAlB,EAAkBA,YACZU,EAAetB,EAASuB,QAAO,SAAAC,GAAO,OAAIA,EAAQ3B,KAAK4B,cAAcC,SAASd,EAAYa,kBAKhG,OACE,sBAAKjC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,SACZC,aAAciB,KAAKZ,iBACrB,cAAC,EAAD,CAAUT,SAAUsB,W,GAvCVK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bd34bca5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.styles.css'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className=\"Card-Container\">\r\n            <img alt=\"Robots\" src={`https://robohash.org/${props.Monster.id}?set=set2&size=180x180`}></img>\r\n            <h2>{props.Monster.name}</h2>\r\n            <h4>{props.Monster.email}</h4>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from '../Card/Card.component';\r\nimport './Card-List.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n    // console.log(props);\r\n    // return (<div className=\"card-list\">{props.children}</div>)\r\n    return(<div className=\"card-list\">\r\n        {props.Monsters.map(Monster => (\r\n            <Card key={Monster.id} Monster={Monster}/>\r\n            //{Monster.name}\r\n        ))}\r\n    </div>)\r\n\r\n}","import React from 'react';\r\nimport './Search-Box.styles.css'\r\n\r\nexport const SearchBox = ({ PlaceHolder, HandleChange }) => {\r\n    return (\r\n        <input\r\n            className=\"Search-Box\"\r\n            type='search'\r\n            placeholder={PlaceHolder}\r\n            onChange={HandleChange}>\r\n\r\n        </input>\r\n    )\r\n}","import React, { Component } from 'react';\nimport { CardList } from './Components/Card-List/Card-List.component';\nimport './App.css';\nimport { SearchBox } from './Components/Search-Box/Seach-Box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      Monsters: [],\n      SearchField: ''\n    };\n    // this.onHandleChange = this.onHandleChange.bind(this); //No use of doin this in new es-6 feature, just make an arrow fuction to do this.\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ Monsters: users }));\n  }\n\n  // onHandleChange(e) {\n  //   this.setState({ SearchField: e.target.value }) //Old way, IN es-6 just declear a function with arrow function, and then you can use this key word to get state.\n  // }\n\n  onHandleChange = (e) => {\n    this.setState({ SearchField: e.target.value })\n  }\n\n  render() {\n    // const Monsters = this.state.Monsters;\n    // const SearchField = this.state.SearchField;\n    const { Monsters, SearchField } = this.state;\n    const FiltedSearch = Monsters.filter(monster => monster.name.toLowerCase().includes(SearchField.toLowerCase()));\n\n\n\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox\n          PlaceHolder='Search'\n          HandleChange={this.onHandleChange} />\n        <CardList Monsters={FiltedSearch} />\n      </div >\n    )\n  }\n}\n\n//<----------------------------------Part2-------------------------------->\n// class App extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       Monsters: []\n//     };\n//   }\n//   componentDidMount() {\n//     fetch('https://jsonplaceholder.typicode.com/users')\n//       .then(response => response.json())\n//       .then(users => this.setState({ Monsters: users }));\n//   }\n\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         <CardList name='Monsters-Name'>\n//           {\n//             this.state.Monsters.map(Monster => (<h1 key={Monster.id}>\n//               {Monster.name}\n//             </h1>))\n//           }</CardList>\n//       </div>\n//     )\n//   }\n// }\n\n// <--------------------------First---------------------------------->\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}